{
  "name": "Lexer Bitwise Operators Regression Test",
  "description": "Ensure lexer properly handles bitwise operators without illegal character errors",
  "setup": {
    "serverPath": "/Users/Ronald.Funk/My_Documents/source/gitlab/c64.nvim/6510lsp_server",
    "serverArgs": [],
    "rootPath": "/Users/Ronald.Funk/My_Documents/source/gitlab/c64.nvim/test-cases",
    "files": {
      "bitwise_test.asm": ".const base = $1000\n.const mask = %11110000\n\nstart:\n    ; Test left shift\n    lda #base << 2\n    \n    ; Test right shift  \n    lda #mask >> 4\n    \n    ; Test bitwise AND\n    lda #base & $FF\n    \n    ; Test bitwise OR\n    lda #base | $0F\n    \n    ; Test bitwise XOR\n    lda #base ^ $AA\n    \n    rts"
    }
  },
  "testCases": [
    {
      "name": "No illegal character errors for bitwise operators",
      "description": "REGRESSION TEST: Lexer should not generate illegal character errors for <<, >>, &, |, ^",
      "type": "diagnostics",
      "input": {
        "file": "bitwise_test.asm"
      },
      "expected": {
        "maxErrors": 2,
        "notContainsMessages": [
          "illegal character",
          "unexpected token"
        ]
      }
    },
    {
      "name": "Bitwise operators get proper syntax highlighting",
      "description": "REGRESSION TEST: Bitwise operators should be tokenized correctly",
      "type": "diagnostics",
      "input": {
        "file": "bitwise_test.asm"
      },
      "expected": {
        "maxErrors": 3
      }
    },
    {
      "name": "Completion works with bitwise expressions",
      "description": "REGRESSION TEST: Symbol completion should work in bitwise expressions",
      "type": "completion",
      "input": {
        "file": "bitwise_test.asm",
        "line": 5,
        "character": 12
      },
      "expected": {
        "minItems": 3,
        "containsItems": [
          {"label": "base"}
        ]
      }
    }
  ]
}