[
  {
    "testCase": {
      "name": "REGRESSION: Lexer must not generate illegal character errors for bitwise operators",
      "description": "CRITICAL: \u003c\u003c \u003e\u003e \u0026 | ^ operators must be recognized, not flagged as illegal",
      "type": "diagnostics",
      "input": {
        "file": "comprehensive_regression.asm",
        "line": 0,
        "character": 0
      },
      "expected": {}
    },
    "status": "PASS",
    "duration": 0
  },
  {
    "testCase": {
      "name": "REGRESSION: Semantic analysis must generate multiple diagnostics",
      "description": "CRITICAL: Must generate multiple errors/warnings/hints - if only 1 diagnostic, semantic analysis is broken",
      "type": "diagnostics",
      "input": {
        "file": "comprehensive_regression.asm",
        "line": 0,
        "character": 0
      },
      "expected": {}
    },
    "status": "PASS",
    "duration": 0
  },
  {
    "testCase": {
      "name": "REGRESSION: Undefined symbol detection must work",
      "description": "CRITICAL: Must detect undefined symbols - basic semantic analysis",
      "type": "diagnostics",
      "input": {
        "file": "comprehensive_regression.asm",
        "line": 0,
        "character": 0
      },
      "expected": {}
    },
    "status": "PASS",
    "duration": 0
  },
  {
    "testCase": {
      "name": "REGRESSION: Illegal opcode warnings must work",
      "description": "CRITICAL: Must warn about illegal opcodes like 'dcp'",
      "type": "diagnostics",
      "input": {
        "file": "comprehensive_regression.asm",
        "line": 0,
        "character": 0
      },
      "expected": {}
    },
    "status": "PASS",
    "duration": 0
  }
]