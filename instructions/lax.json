[
  {
    "mnemonic": "LAX",
    "description": "LAX (Load Accumulator and indeX) is an illegal opcode machine language instruction for the C64. It retrieves data from a specified RAM or I/O address and stores it in both the accumulator and the X index register.",
    "addressing_modes": [
      {
        "opcode": "A3",
        "addressing_mode": "Indexed-indirect",
        "assembler_format": "LAX (nn,X)",
        "length": 2,
        "cycles": 6
      },
      {
        "opcode": "A7",
        "addressing_mode": "Zeropage",
        "assembler_format": "LAX nn",
        "length": 2,
        "cycles": 3
      },
      {
        "opcode": "AF",
        "addressing_mode": "Absolute",
        "assembler_format": "LAX nnnn",
        "length": 3,
        "cycles": 4
      },
      {
        "opcode": "B3",
        "addressing_mode": "Indirect-indexed",
        "assembler_format": "LAX (nn),Y",
        "length": 2,
        "cycles": "5*"
      },
      {
        "opcode": "B7",
        "addressing_mode": "Zeropage,Y",
        "assembler_format": "LAX nn,Y",
        "length": 2,
        "cycles": 4
      },
      {
        "opcode": "BF",
        "addressing_mode": "Absolute,Y",
        "assembler_format": "LAX nnnn,Y",
        "length": 3,
        "cycles": "4*"
      }
    ],
    "cpu_flags": [
      "N - Set if bit 7 of the result is 1.",
      "Z - Set if the result is 0."
    ]
  }
]