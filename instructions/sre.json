[
  {
    "mnemonic": "SRE",
    "description": "SRE (Shift Right then EOR) is an illegal opcode machine language instruction for the Commodore 64. It combines two operations: Logical Shift Right (LSR) followed by Exclusive OR (EOR).",
    "addressing_modes": [
      {
        "opcode": "4F",
        "addressing_mode": "Absolute",
        "assembler_format": "SRE nnnn",
        "length": 3,
        "cycles": 6
      },
      {
        "opcode": "5F",
        "addressing_mode": "Absolute,X",
        "assembler_format": "SRE nnnn,X",
        "length": 3,
        "cycles": 7
      },
      {
        "opcode": "5B",
        "addressing_mode": "Absolute,Y",
        "assembler_format": "SRE nnnn,Y",
        "length": 3,
        "cycles": 7
      },
      {
        "opcode": "47",
        "addressing_mode": "Zeropage",
        "assembler_format": "SRE nn",
        "length": 2,
        "cycles": 5
      },
      {
        "opcode": "57",
        "addressing_mode": "Zeropage,X",
        "assembler_format": "SRE nn,X",
        "length": 2,
        "cycles": 6
      },
      {
        "opcode": "43",
        "addressing_mode": "Indexed-indirect",
        "assembler_format": "SRE (nn,X)",
        "length": 2,
        "cycles": 8
      },
      {
        "opcode": "53",
        "addressing_mode": "Indirect-indexed",
        "assembler_format": "SRE (nn),Y",
        "length": 2,
        "cycles": 8
      }
    ],
    "cpu_flags": [
      "C - The carry flag is set to the value of the bit that was shifted out (bit 0).",
      "N - The negative flag is set if the result is negative, i.e. has its most significant bit set.",
      "Z - The zero flag is set if the result is zero, or cleared if it is non-zero."
    ]
  }
]