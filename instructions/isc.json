{
  "mnemonic": "ISC",
  "description": "ISC (short for \"Increase then Subtract with Carry\") is a mnemonic for an illegal opcode machine language instruction. This illegal opcode is a combination of two operations with the same addressing mode: INC, followed by SBC Function: {addr} = {addr} + 1; then A = A - {addr}",
  "addressing_modes": [
    {
      "opcode": "EF",
      "addressing_mode": "Absolute",
      "assembler_format": "ISC nnnn",
      "length": 3,
      "cycles": 6
    },
    {
      "opcode": "FF",
      "addressing_mode": "Absolute,X",
      "assembler_format": "ISC nnnn,X",
      "length": 3,
      "cycles": 7
    },
    {
      "opcode": "FB",
      "addressing_mode": "Absolute,Y",
      "assembler_format": "ISC nnnn,Y",
      "length": 3,
      "cycles": 7
    },
    {
      "opcode": "E7",
      "addressing_mode": "Zeropage",
      "assembler_format": "ISC nn",
      "length": 2,
      "cycles": 5
    },
    {
      "opcode": "F7",
      "addressing_mode": "Zeropage,X",
      "assembler_format": "ISC nn,X",
      "length": 2,
      "cycles": 6
    },
    {
      "opcode": "E3",
      "addressing_mode": "Indexed-indirect",
      "assembler_format": "ISC (nn,X)",
      "length": 2,
      "cycles": 8
    },
    {
      "opcode": "F3",
      "addressing_mode": "Indirect-indexed",
      "assembler_format": "ISC (nn),Y",
      "length": 2,
      "cycles": 8
    }
  ],
  "cpu_flags": [
    "N - The negative flag is set if the result is negative, i.e. has its most significant bit set.",
    "V - The overflow flag is set if the operation results in an overflow.",
    "Z - The zero flag is set if the result is zero, or cleared if it is non-zero.",
    "C - The carry flag is set or cleared depending on the result."
  ]
}