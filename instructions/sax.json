[
  {
    "mnemonic": "SAX",
    "description": "SAX (short for \"Store Accumulator AND X\") is an illegal opcode machine language instruction that stores the bitwise AND of the accumulator and the X index register at the specified RAM or I/O address. The contents of both the accumulator and the X index register remain unchanged. This illegal opcode combines two operations with the same addressing mode: STA and STX. Function: {addr} = A & X",
    "addressing_modes": [
      {
        "opcode": "8F",
        "addressing_mode": "Absolute",
        "assembler_format": "SAX nnnn",
        "length": 3,
        "cycles": 4
      },
      {
        "opcode": "87",
        "addressing_mode": "Zeropage",
        "assembler_format": "SAX nn",
        "length": 2,
        "cycles": 3
      },
      {
        "opcode": "97",
        "addressing_mode": "Zeropage,Y",
        "assembler_format": "SAX nn,Y",
        "length": 2,
        "cycles": 4
      },
      {
        "opcode": "83",
        "addressing_mode": "Indexed-indirect",
        "assembler_format": "SAX (nn,X)",
        "length": 2,
        "cycles": 6
      }
    ],
    "cpu_flags": []
  }
]