[
  {
    "mnemonic": "NOP",
    "description": "NOP (short for \"No OPeration\") is a machine language instruction that simply fills a byte of program memory and takes two machine cycles to execute. This two-microsecond \"coffee break\" for the CPU is useful for debugging and other \"hacks,\" which is why many CPU architectures include such an instruction. For programs in RAM, NOP is used to \"edit out\" instructions by overwriting unwanted instructions with one or more NOPs. This is a \"quick patch\" solution, as actually removing the byte from the code would require recompiling all subsequent code. Many \"cheat POKEs\" for games involve POKEing addresses with the byte 234, which is the opcode for NOP. In time-critical operations, such as raster bars, NOP instructions can prolong the execution time for a given snippet of code in increments of about two microseconds. There are also six undocumented opcodes (26/$1A, 58/$3A, 90/$5A, 122/$7A, 218/$DA, and 250/$FA) that act as \"duplicates\" of the NOP.",
    "addressing_modes": [
      {
        "opcode": "EA",
        "addressing_mode": "Implied",
        "assembler_format": "NOP",
        "length": 1,
        "cycles": 2
      },
      {
        "opcode": "1A",
        "addressing_mode": "Implied",
        "assembler_format": "NOP",
        "length": 1,
        "cycles": 2
      },
      {
        "opcode": "3A",
        "addressing_mode": "Implied",
        "assembler_format": "NOP",
        "length": 1,
        "cycles": 2
      },
      {
        "opcode": "5A",
        "addressing_mode": "Implied",
        "assembler_format": "NOP",
        "length": 1,
        "cycles": 2
      },
      {
        "opcode": "7A",
        "addressing_mode": "Implied",
        "assembler_format": "NOP",
        "length": 1,
        "cycles": 2
      },
      {
        "opcode": "DA",
        "addressing_mode": "Implied",
        "assembler_format": "NOP",
        "length": 1,
        "cycles": 2
      },
      {
        "opcode": "FA",
        "addressing_mode": "Implied",
        "assembler_format": "NOP",
        "length": 1,
        "cycles": 2
      }
    ],
    "cpu_flags": []
  }
]